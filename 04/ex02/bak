let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/cpp/04/ex02
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
$argadd main.cpp
edit main.cpp
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 50 + 39) / 78)
exe 'vert 1resize ' . ((&columns * 75 + 159) / 318)
exe '2resize ' . ((&lines * 10 + 39) / 78)
exe 'vert 2resize ' . ((&columns * 106 + 159) / 318)
exe '3resize ' . ((&lines * 10 + 39) / 78)
exe 'vert 3resize ' . ((&columns * 135 + 159) / 318)
exe '4resize ' . ((&lines * 39 + 39) / 78)
exe 'vert 4resize ' . ((&columns * 242 + 159) / 318)
exe '5resize ' . ((&lines * 24 + 39) / 78)
argglobal
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 90 - ((36 * winheight(0) + 25) / 50)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
90
normal! 0
wincmd w
argglobal
if bufexists("main.cpp") | buffer main.cpp | else | edit main.cpp | endif
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 41 - ((2 * winheight(0) + 5) / 10)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
41
normal! 0
wincmd w
argglobal
if bufexists("main.cpp") | buffer main.cpp | else | edit main.cpp | endif
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 43 - ((7 * winheight(0) + 5) / 10)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
43
normal! 011|
wincmd w
argglobal
if bufexists("main.cpp") | buffer main.cpp | else | edit main.cpp | endif
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 144 - ((28 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
144
normal! 013|
wincmd w
argglobal
terminal ++curwin ++cols=200 ++rows=20 
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 138 - ((19 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
138
normal! 020|
wincmd w
exe '1resize ' . ((&lines * 50 + 39) / 78)
exe 'vert 1resize ' . ((&columns * 75 + 159) / 318)
exe '2resize ' . ((&lines * 10 + 39) / 78)
exe 'vert 2resize ' . ((&columns * 106 + 159) / 318)
exe '3resize ' . ((&lines * 10 + 39) / 78)
exe 'vert 3resize ' . ((&columns * 135 + 159) / 318)
exe '4resize ' . ((&lines * 39 + 39) / 78)
exe 'vert 4resize ' . ((&columns * 242 + 159) / 318)
exe '5resize ' . ((&lines * 24 + 39) / 78)
tabnext 1
badd +40 main.cpp
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOSA
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
